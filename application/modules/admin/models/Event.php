<?php

/**
 * Admin_Model_Event
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage RhemaSys
 * @author     Pele Odiase <info@rhema-webesign.com>
 * @version    SVN: $Id: Builder.php 6716 2009-11-12 19:26:28Z jwage $
 */
class Admin_Model_Event extends Admin_Model_Base_Event{
	public static function getLatestEvents($number = 5){
		$model = __CLASS__;
		$now = date(DB_DATE_FORMAT);
		$query = Doctrine_Query::create()->from("$model e")->limit($number)->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)->orderBy('e.start_at')->//	->where('e.end_at < ?', $now)
		addWhere('e.is_active =?', 1);
		return $query->execute();
	}
	
	public function groupEventsByType(){
		$daoFilter = new Rhema_Dao_Filter();
		
		$daoFilter->addJoin('EventType', Rhema_Dao_Filter::INNER_JOIN)->addGroupBy('event_type_id')->addAggregateFieldList('id', 'COUNT')->//->setDebug()
		setModel(__CLASS__);
		;
		
		$list = Rhema_Model_Service::createQuery($daoFilter)->execute();
		pd($list);
		return $list;
	}
	
	public function getEventsByRange($showdate, $viewType = 'week'){
		$timeString = strtotime($showdate);
		$startDate = new Zend_Date($timeString);
		$startDate->setTime('00:00:01', 'HH:mm:ss');
		$endDate = new Zend_Date($startDate->get());
		$ret = array();
		switch($viewType){
			case 'day' :
				{
					$endDate->setTime('23:59:59', 'HH:mm:ss');
					$cnt = 5;
					break;
				}
			case 'week' :
				{
					$startDate->setDay('monday');
					$endDate->addWeek(1)->subDay(1);
					$cnt = 20;
					break;
				}
			case 'month' :
				{
					$startDate->setDay(1);
					$endDate = new Zend_Date($startDate->get());
					$endDate->addMonth(1);
					$endDate->setDay(1);
					$cnt = 50;
					break;
				}
		}
		$endDate->setTime('23:59:59', 'HH:mm:ss');
		$startTime = $startDate->get();
		$endTime = $endDate->get();
		
		$ret = array();
		$ret['events'] = array();
		$ret["issort"] = true;
		$ret["start"]  = date('m/d/Y H:i', $startTime);
		$ret["end"]    = date('m/d/Y H:i', $endTime);
		$ret['error']  = null;
		
		
		
		$s = date(DB_DATE_FORMAT, $startTime);
		$e = date(DB_DATE_FORMAT, $endTime);
		
		$filter = new Rhema_Dao_Filter();
		$filter->setModel(__CLASS__)
			   ->addCondition('start_at', $s, Rhema_Dao_Filter::OP_GTE)
			   ->addCondition('end_at', $e, Rhema_Dao_Filter::OP_LTE);
		
		$result = Rhema_Model_Service::createQuery($filter)->execute();
		
		foreach((array) $result as $evt){
			$ret['events'][] = array(
					(int) $evt['id'], 
					$evt['title'], 
					date("m/d/Y H:i", strtotime($evt['start_at'])), 
					date("m/d/Y H:i", strtotime($evt['end_at'])), 
					(int) $evt['is_allday'], 
					0,  //more than one day event
					0,  //Recurring event
					rand(- 1, 13), 
					1,  //editable
					$evt['location'], 
					'')//$attends
;
		}
		return $ret;
	}
	
	public function listEventLocationsWithAlbumCount(){
		$daoFilter = new Rhema_Dao_Filter();
		
		$daoFilter->addOrderBy('title')
		         ->setModel(__CLASS__)->addFields(array(
				'title', 
				'description', 
				'location'))->addJoin('Portfolio', Rhema_Dao_Filter::INNER_JOIN, array(
				'title'))->addGroupBy('location')->//->setDebug()
		addAggregateFieldList('location', 'COUNT');
		
		$list = Rhema_Model_Service::createQuery($daoFilter)->execute();
		
		return $list;
	}
}