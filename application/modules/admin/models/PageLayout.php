<?php

/**
 * Admin_Model_PageLayout
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage RhemaSys
 * @author     Pele Odiase <info@rhema-webesign.com>
 * @version    SVN: $Id: Builder.php 6716 2009-11-12 19:26:28Z jwage $
 */
class Admin_Model_PageLayout extends Admin_Model_Base_PageLayout{

	public static function getPageLayout($page_id, $template_id, $sourceModel){
		$layout = array();
		$stack = array();
		$layoutModel = __CLASS__;
		$filter = new Zend_Filter_Word_CamelCaseToUnderscore(); // new Rhema_Filter_FormatModelName();


		$sourceModel = strtolower($filter->filter($sourceModel));
		$sourceId    = Rhema_Util::getTableId($sourceModel);
		$filter = new Rhema_Dao_Filter();
		$filter->setModel(__CLASS__)->addFields(array('page_id', 'template_id', 'admin_section_id',
				'item_seq', 'item', 'admin_content_type_id','admin_table_id'))
				->addJoin('AdminContentType', Rhema_Dao_Filter::INNER_JOIN, array('code'))
				->addCondition('page_id', $page_id)
				->addCondition('template_id', $template_id)
				//->setDebug()
				->addCondition('admin_table_id', $sourceId)
				->addOrderBy('item_seq')
				->addOrderBy('section_seq');

		$query    = Rhema_Model_Service::createQuery($filter);
		$result   = $query->execute();
		//pd($result);
		$sections = array();

		if($result){
			foreach($result as $lays){
				$sectionId 	= intval($lays['admin_section_id']);
				$item_seq 	= intVal($lays['item_seq']);
				$itemId 	= intVal($lays['item']);
				$type 		= $lays['admin_content_type_id'];
				$tableId 	= $lays['admin_table_id'];
				$layId	 	= $lays['id'];
				$code 		= $lays['AdminContentType']['code'];
				$layout['items'][$sectionId][$item_seq][$type] = "{$itemId}_{$layId}_{$tableId}";

				$stack[$layId][$code]  = $lays;
			}
		}else{
			$layout = array('items' => array());
		}

		$return['layout'] = $layout;
		$return['stack']  = $stack;

		return $return;
	}

	public static function deleteItem($layoutId){
		$model = __CLASS__;

		$query = Doctrine_Query::create()->delete("$model m")->where('m.id =?', $layoutId);
		$done = $query->execute();

		Rhema_Model_Abstract::clearRelatedCacheFiles(array(__CLASS__));

		return $done;
	}

	public static function resetLayout($page, $template){
		$model = __CLASS__;
		$q     = Doctrine_Query::create()
							->delete("$model a")
							->where("a.page_id = $page")
							->andWhere("a.template_id = $template");

		$done = $q->execute();

		Rhema_Model_Abstract::clearRelatedCacheFiles(array(__CLASS__));

		return $done;
	}

	public function updateLayout($page_id, $template_id, $table, $itemAdd = array(), $sectionAdd = array()){
		$itemAdd  = array_filter($itemAdd);
		$dateTime = new Doctrine_Expression('NOW()'); //date(DB_DATE_FORMAT, time());
		$model    = __CLASS__;
		$sourceId =  self::getTableId($table);


		$query = Doctrine_Query::create()
							->from("$model p")
							->where('p.page_id =?', $page_id)
							->andWhere('p.template_id =?', $template_id)
							->andWhere('p.deleted_at IS NULL OR p.deleted_at IS NOT NULL')
							->andWhere('p.admin_table_id =?', $sourceId);


		$layout = $query->execute();
		$sectionAdd = array_flip($sectionAdd);
		foreach($layout as $index => $row){
			$eSxn = intVal($row['admin_section_id']);
			if(isset($itemAdd[$eSxn])){
				$contentType = $row['admin_content_type_id'];
				if(isset($itemAdd[$eSxn][$contentType])){
					$itemId = intVal($row['item']);
					if(isset($itemAdd[$eSxn][$contentType][$itemId])){
						$row['deleted_at'] = null;
						$row['section_seq'] = $sectionAdd[$eSxn];
						$row['item_seq'] = intVal($itemAdd[$eSxn][$contentType][$itemId]);
					}else{
						$row['deleted_at'] = $dateTime;
					}
					unset($itemAdd[$eSxn][$contentType][$itemId]);
				}else{
					$row['deleted_at'] = $dateTime;
				}

			}else{
				$row['deleted_at'] = $dateTime;
			}

		}

		$layout->save();
		$layout->free();

		if(count($itemAdd)){
			foreach($itemAdd as $aSexn => $res){
				foreach($res as $contentType => $itemData){
					foreach($itemData as $itemId => $itemSeq){
						$obj = new $model();
						$obj->template_id = $template_id;
						$obj->admin_section_id = $aSexn;
						$obj->section_seq = $sectionAdd[$aSexn];
						$obj->item = $itemId;
						$obj->item_seq = $itemSeq;
						$obj->page_id = $page_id;
						$obj->admin_content_type_id = $contentType;
						$obj->admin_table_id = $sourceId;
						$obj->save();
						$obj->free();
					}
				}
			}
		}



		$tags = array('page', 'page_layout');
		Rhema_Cache::clearCacheOnUpdate(__CLASS__, $tags);

		return $this;
	}

	public function getHeaderFooterItems($arr){
		$data = array();
		$tempObject = Rhema_Model_Service::factory('Template');

		$item['PageHeader'] = $arr['PageHeader']['template_id'];
		$item['PageFooter'] = $arr['PageFooter']['template_id'];

		$headFootData = $tempObject->getActiveSections(array_values($item), Doctrine_core::HYDRATE_ARRAY);
		//pd($headFootData);
		foreach($item as $type => $templateId){
			$itemId = $arr[$type]['id'];

			$data[$type] = $this->getPageLayout($itemId, $templateId, $type);
			$data[$type]['sections'] = isset($headFootData[$templateId]) ? $headFootData[$templateId]['TemplateSections'] : array();

		//$tempObject->getTemplateSections($itemId, Doctrine_core::HYDRATE_ARRAY);
		//$data[$type]['layout']              = $lay ;
		}
		//pd($data);
		return $data;
	}
}