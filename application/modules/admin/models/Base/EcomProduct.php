<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Admin_Model_EcomProduct', 'admin');

/**
 * Admin_Model_Base_EcomProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $description
 * @property string $code
 * @property string $ecom_brand_id
 * @property string $image_file
 * @property float $price
 * @property float $discount_percent
 * @property float $rrp
 * @property integer $quantity
 * @property integer $is_enabled
 * @property integer $is_taxable
 * @property integer $is_virtual
 * @property integer $ecom_tax_id
 * @property Admin_Model_EcomBrand $EcomBrand
 * @property Admin_Model_EcomTax $EcomTax
 * @property Doctrine_Collection $EcomCategory
 * @property Doctrine_Collection $ProductCategory
 * @property Doctrine_Collection $OrderProduct
 * @property Doctrine_Collection $EcomOrder
 * 
 * @package    ##PACKAGE##
 * @subpackage RhemaSys
 * @author     Pele Odiase <info@rhema-webdesign.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Admin_Model_Base_EcomProduct extends Rhema_Model_Abstract
{
    public function setTableDefinition()
    {
        $this->setTableName('ecom_product');
        $this->hasColumn('title', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '45',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('code', 'string', 45, array(
             'type' => 'string',
             'unique' => true,
             'length' => '45',
             ));
        $this->hasColumn('ecom_brand_id', 'string', 45, array(
             'type' => 'string',
             'length' => '45',
             ));
        $this->hasColumn('image_file', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('price', 'float', null, array(
             'type' => 'float',
             'default' => '0.00',
             ));
        $this->hasColumn('discount_percent', 'float', null, array(
             'type' => 'float',
             'default' => '0.00',
             ));
        $this->hasColumn('rrp', 'float', null, array(
             'type' => 'float',
             'default' => '0.00',
             ));
        $this->hasColumn('quantity', 'integer', 8, array(
             'type' => 'integer',
             'default' => 1,
             'length' => '8',
             ));
        $this->hasColumn('is_enabled', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'length' => '1',
             ));
        $this->hasColumn('is_taxable', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'length' => '1',
             ));
        $this->hasColumn('is_virtual', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '1',
             ));
        $this->hasColumn('ecom_tax_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');

        $this->check('price < rrp');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Admin_Model_EcomBrand as EcomBrand', array(
             'local' => 'ecom_brand_id',
             'foreign' => 'id'));

        $this->hasOne('Admin_Model_EcomTax as EcomTax', array(
             'local' => 'ecom_tax_id',
             'foreign' => 'id'));

        $this->hasMany('Admin_Model_EcomCategory as EcomCategory', array(
             'refClass' => 'Admin_Model_EcomProductCategory',
             'local' => 'ecom_product_id',
             'foreign' => 'ecom_category_id'));

        $this->hasMany('Admin_Model_EcomProductCategory as ProductCategory', array(
             'local' => 'id',
             'foreign' => 'ecom_product_id'));

        $this->hasMany('Admin_Model_EcomOrderDetail as OrderProduct', array(
             'local' => 'id',
             'foreign' => 'ecom_product_id'));

        $this->hasMany('Admin_Model_EcomOrder as EcomOrder', array(
             'refClass' => 'Admin_Model_EcomOrderDetail',
             'local' => 'ecom_product_id',
             'foreign' => 'ecom_order_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $rhema_model_template_subsite0 = new Rhema_Model_Template_Subsite();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 'title',
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($rhema_model_template_subsite0);
        $this->actAs($sluggable0);
    }
}