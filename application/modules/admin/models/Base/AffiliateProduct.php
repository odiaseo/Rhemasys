<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Admin_Model_AffiliateProduct', 'admin');

/**
 * Admin_Model_Base_AffiliateProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $keywords
 * @property string $description
 * @property string $deeplink
 * @property decimal $price
 * @property string $currency
 * @property string $country
 * @property string $language
 * @property string $barcode
 * @property string $image_url
 * @property string $image_large_url
 * @property string $image_thumbnail_url
 * @property string $mobile_network
 * @property string $contract_type
 * @property integer $contract_length
 * @property integer $inclusive_minutes
 * @property integer $inclusive_texts
 * @property integer $data_allowance
 * @property string $network_promotion
 * @property string $service_provider
 * @property string $product_data
 * @property integer $in_stock
 * @property string $code
 * @property string $isbn
 * @property timestamp $valid_from
 * @property timestamp $valid_to
 * @property decimal $search_price
 * @property integer $is_hot_pick
 * @property integer $is_featured
 * @property integer $is_expired
 * @property string $unique_hash
 * @property integer $is_archived
 * @property integer $is_for_sale
 * @property enum $index_status
 * @property string $fabric
 * @property integer $size
 * @property string $colour
 * @property string $gender
 * @property integer $affiliate_product_brand_id
 * @property integer $affiliate_product_category_id
 * @property integer $affiliate_network_id
 * @property integer $affiliate_retailer_id
 * @property integer $affiliate_feed_id
 * @property integer $affiliate_promotion_id
 * @property integer $affiliate_product_manufacturer_id
 * @property integer $affiliate_product_type_id
 * @property Admin_Model_AffiliateProductManufacturer $AffiliateProductManufacturer
 * @property Admin_Model_AffiliatePromotion $AffiliatePromotion
 * @property Admin_Model_AffiliateFeed $AffiliateFeed
 * @property Admin_Model_AffiliateRetailer $AffiliateRetailer
 * @property Admin_Model_AffiliateProductBrand $AffiliateProductBrand
 * @property Admin_Model_AffiliateProductCategory $AffiliateProductCategory
 * @property Admin_Model_AffiliateNetwork $AffiliateNetwork
 * @property Admin_Model_AffiliateProductType $AffiliateProductType
 * 
 * @package    ##PACKAGE##
 * @subpackage RhemaSys
 * @author     Pele Odiase <info@rhema-webdesign.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Admin_Model_Base_AffiliateProduct extends Rhema_Model_Abstract
{
    public function setTableDefinition()
    {
        $this->setTableName('affiliate_product');
        $this->hasColumn('title', 'string', 512, array(
             'type' => 'string',
             'length' => '512',
             ));
        $this->hasColumn('keywords', 'string', 512, array(
             'type' => 'string',
             'length' => '512',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('deeplink', 'string', 1024, array(
             'type' => 'string',
             'length' => '1024',
             ));
        $this->hasColumn('price', 'decimal', 5, array(
             'type' => 'decimal',
             'length' => '5',
             ));
        $this->hasColumn('currency', 'string', 5, array(
             'type' => 'string',
             'length' => '5',
             ));
        $this->hasColumn('country', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('language', 'string', 5, array(
             'type' => 'string',
             'length' => '5',
             ));
        $this->hasColumn('barcode', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
        $this->hasColumn('image_url', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));
        $this->hasColumn('image_large_url', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));
        $this->hasColumn('image_thumbnail_url', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));
        $this->hasColumn('mobile_network', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('contract_type', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('contract_length', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('inclusive_minutes', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('inclusive_texts', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('data_allowance', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             ));
        $this->hasColumn('network_promotion', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('service_provider', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
        $this->hasColumn('product_data', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('in_stock', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('code', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
        $this->hasColumn('isbn', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('valid_from', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('valid_to', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
        $this->hasColumn('search_price', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             ));
        $this->hasColumn('is_hot_pick', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('is_featured', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '1',
             ));
        $this->hasColumn('is_expired', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '1',
             ));
        $this->hasColumn('unique_hash', 'string', 32, array(
             'type' => 'string',
             'length' => '32',
             ));
        $this->hasColumn('is_archived', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '1',
             ));
        $this->hasColumn('is_for_sale', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '1',
             ));
        $this->hasColumn('index_status', 'enum', 10, array(
             'type' => 'enum',
             'length' => 10,
             'values' => 
             array(
              0 => 'to_delete',
              1 => 'to_update',
              2 => 'to_index',
              3 => 'no_index',
              4 => 'indexed',
             ),
             'default' => 'to_index',
             ));
        $this->hasColumn('fabric', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('size', 'integer', 8, array(
             'type' => 'integer',
             'length' => '8',
             ));
        $this->hasColumn('colour', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('gender', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('affiliate_product_brand_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('affiliate_product_category_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('affiliate_network_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('affiliate_retailer_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('affiliate_feed_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('affiliate_promotion_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('affiliate_product_manufacturer_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('affiliate_product_type_id', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             ));


        $this->index('prod_status', array(
             'fields' => 
             array(
              0 => 'index_status',
             ),
             'length' => 10,
             ));
        $this->index('hash_index', array(
             'fields' => 
             array(
              0 => 'unique_hash',
             ),
             'type' => 'unique',
             'length' => 32,
             ));
        $this->index('valid_from_index', array(
             'fields' => 
             array(
              0 => 'valid_from',
             ),
             'length' => 25,
             ));
        $this->index('valid_to_index', array(
             'fields' => 
             array(
              0 => 'valid_to',
             ),
             'length' => 25,
             ));
        $this->index('price_index', array(
             'fields' => 
             array(
              0 => 'is_expired',
              1 => 'price',
             ),
             ));
        $this->index('code_index', array(
             'fields' => 
             array(
              0 => 'code',
             ),
             ));
        $this->index('deleted_at_index', array(
             'fields' => 
             array(
              0 => 'deleted_at',
             ),
             'length' => 25,
             ));
        $this->index('expired_index', array(
             'fields' => 
             array(
              0 => 'is_expired',
              1 => 'affiliate_product_type_id',
              2 => 'id',
             ),
             ));
        $this->index('prod_cat_index', array(
             'fields' => 
             array(
              0 => 'is_expired',
              1 => 'affiliate_product_category_id',
              2 => 'id',
             ),
             ));
        $this->index('retailer_index', array(
             'fields' => 
             array(
              0 => 'is_expired',
              1 => 'affiliate_retailer_id',
              2 => 'id',
             ),
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Admin_Model_AffiliateProductManufacturer as AffiliateProductManufacturer', array(
             'local' => 'affiliate_product_manufacturer_id',
             'foreign' => 'id'));

        $this->hasOne('Admin_Model_AffiliatePromotion as AffiliatePromotion', array(
             'local' => 'affiliate_promotion_id',
             'foreign' => 'id'));

        $this->hasOne('Admin_Model_AffiliateFeed as AffiliateFeed', array(
             'local' => 'affiliate_feed_id',
             'foreign' => 'id'));

        $this->hasOne('Admin_Model_AffiliateRetailer as AffiliateRetailer', array(
             'local' => 'affiliate_retailer_id',
             'foreign' => 'id'));

        $this->hasOne('Admin_Model_AffiliateProductBrand as AffiliateProductBrand', array(
             'local' => 'affiliate_product_brand_id',
             'foreign' => 'id'));

        $this->hasOne('Admin_Model_AffiliateProductCategory as AffiliateProductCategory', array(
             'local' => 'affiliate_product_category_id',
             'foreign' => 'id'));

        $this->hasOne('Admin_Model_AffiliateNetwork as AffiliateNetwork', array(
             'local' => 'affiliate_network_id',
             'foreign' => 'id'));

        $this->hasOne('Admin_Model_AffiliateProductType as AffiliateProductType', array(
             'local' => 'affiliate_product_type_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $rhema_model_template_subsite0 = new Rhema_Model_Template_Subsite();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $blameable0 = new Doctrine_Template_Blameable();
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'batchUpdates' => false,
             ));
        $this->actAs($timestampable0);
        $this->actAs($rhema_model_template_subsite0);
        $this->actAs($softdelete0);
        $this->actAs($blameable0);
        $this->actAs($searchable0);
    }
}