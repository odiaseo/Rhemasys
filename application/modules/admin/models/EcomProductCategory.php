<?php

/**
 * Admin_Model_EcomProductCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage RhemaSys
 * @author     Pele Odiase <info@rhema-webesign.com>
 * @version    SVN: $Id: Builder.php 6716 2009-11-12 19:26:28Z jwage $
 */
class Admin_Model_EcomProductCategory extends Admin_Model_Base_EcomProductCategory{

	public static function getSearchLayout($value, $key = CATEGORY_MAP, $limit = 20, $page = 1, $url = '/'){
		
		$model 		= __CLASS__; 
		$pageChunk	= 5;
		$page       = $page ? $page : 1;
		$limit      = $limit ? $limit : 20;	
			
		$query = Doctrine_Query::create()
					->select('pc.id, p.*,c.title')
					->from("$model pc")
					->leftJoin('pc.EcomProduct p')
					->leftJoin('pc.EcomCategory c')
					->where("c.$key =?", "$value");
					//->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY);
					
					
		$pagerLayout = new Rhema_Model_PagerLayout(
		      new Doctrine_Pager($query, $page, $limit), 
		      new Doctrine_Pager_Range_Sliding(array('chunk' => $pageChunk)),			            				      
		      $url
		);
		
		$pagerLayout->setTemplate(self::$pageTemplate);
		$pagerLayout->setSelectedTemplate(self::$activePageTemplate);
		
			
		return $pagerLayout;
	}
	
	public static function getProductCategory($productId){
		$model  = __CLASS__ ;
		$query = Doctrine_Query::create()
					->select('p.ecom_category_id')
					->from("$model p") 
					->where("p.ecom_product_id=?", $productId)
					->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY);
		return $query->execute();	
	}
	

	public static function updateProductCategory($productId, $cats  = array()){ 
			
 		if($productId){
			$table		= __CLASS__ ;
			$record		= Doctrine_Core::getTable($table)->findBy('ecom_product_id', $productId); 
			$toAdd 		= array_flip($cats);
			$count 		= 0;
			
			foreach($record as $existField){    					
				$fId = $existField['ecom_category_id'];
				if(isset($toAdd[$fId])){
					$existField['deleted_at'] = null;  			
				}else{
					$existField['deleted_at'] = date(DB_DATE_FORMAT, time());
				}
				unset($toAdd[$fId]);
				$count++;
			} 
			$record->save();
			
			if(count($toAdd)){ 		 	    					    			 	  	 	
			 	foreach($toAdd as $cat => $num){ 
			 		$obj = new Admin_Model_EcomProductCategory();
			 		$obj->ecom_category_id  = $cat; 
			 		$obj->ecom_product_id   = $productId;
			 		$obj->save();
			 	}	    			 		    				
			}	 
			
			$message = "$count records updated, " . count($toAdd) . ' records created.';
 		}else{
 			$message = 'Product not found';
 		}
 		
 		return $message;
	}
}