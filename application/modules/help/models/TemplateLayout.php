<?php /* This file encoded by Raizlabs PHP Obfuscator http://www.raizlabs.com/software */ ?>
<?php

/**
 * Help_Model_TemplateLayout
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage RhemaSys
 * @author     Pele Odiase <info@rhema-webesign.com>
 * @version    SVN: $Id: Builder.php 6716 2009-11-12 19:26:28Z jwage $
 */
class Help_Model_TemplateLayout extends Help_Model_Base_TemplateLayout
{

	public static function getLayout($template_id){
		$model   = __CLASS__ ;		
		$query   = Doctrine_Query::create()
		        	->select('t.*,f.is_mandatory')
					->from("$model t")				
					->where('t.template_id =?', $template_id)
					->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
					->leftJoin('t.Field f');
		$exist = $query->execute();	 
		return self::processLayout($exist);
	}
	
	public static function processLayout($object){
		$layout  = array();
		foreach($object as $row){
			$sxn  = $row['section_id'];
			$sseq = $row['section_seq'];
			$iseq = $row['item_seq'];
			$fld  = $row['field_id'];
			$type = ($row['content_type'] == 'field') ? ($row['Field']['is_mandatory'] ? 'mand' : 'opt') : 'plate';
			
			
			$layout[$sxn][$sseq][$type][$fld] = $iseq;
		}	
		
		return $layout;	
	}
	
	public static function saveLayout($sections, $template_id){
		$model   		= __CLASS__ ;
		$itemAdd 		= array();
		$dateTime  		= date(DB_DATE_FORMAT, time());
		$seq            = 0;
		foreach($sections as $sxnId => $arr){
			$seq++;
			$parts   = explode(',', strtolower($arr)); 
			$itemSeq = 0;
			for($i=0; $i<count($parts); $i++){				
				$itemSeq++;
				if('sxn' == substr($parts[$i],0,3)) {
					continue;
				}			
				$list = str_replace('li_', '',$parts[$i]);
				if($list){			
				list($type, $fieldId)   = explode('-',$list);
					$content_type = ('plate' == $type) ? 'plate' : 'field';
					$fieldId      = intval($fieldId);
					$sxnId        = intval($sxnId);				 
					$itemAdd[$sxnId][$seq][$content_type][$fieldId] = $itemSeq;	
				}		 
			} 
		}
				
		$query = Doctrine_Query::create()
		        ->select('t.*,f.is_mandatory')
				->from("$model t")				
				->where('t.template_id =?', $template_id)
				->leftJoin('t.Field f')
				//->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
				->andWhere('t.deleted_at IS NULL OR t.deleted_at IS NOT NULL');
		$exist = $query->execute();
		 		 
		
		foreach($exist as $index => $row){
			if($row['template_id'] == $template_id){
				$eSxn = intVal($row['section_id']);
				if(isset($itemAdd[$eSxn])){
					$sxnSeq   = intVal($row['section_seq']);
					if(isset($itemAdd[$eSxn][$sxnSeq])){	
						$type    = $row['content_type'];					
						if(isset($itemAdd[$eSxn][$sxnSeq][$type])){						 
							$itemId    = intVal($row['field_id']);					
							if(isset($itemAdd[$eSxn][$sxnSeq][$type][$itemId])){								
								$row['deleted_at']   = null;
								$row['section_seq']  = $sxnSeq;
								$row['item_seq']     = $itemAdd[$eSxn][$sxnSeq][$type][$itemId];
								unset($itemAdd[$eSxn][$sxnSeq][$type][$itemId]);						
							}else{
								$row['deleted_at']      = $dateTime;
							}		
						}else{
							$row['deleted_at']      = $dateTime;
						}
					}else{
						$row['deleted_at'] = $dateTime;
					}
				}else{
					$row['deleted_at'] = $dateTime;
				}				
			}
			$row->save();
		}
		
		
		if(count($itemAdd)){   	    					    			 	  
		 	foreach($itemAdd as $aSexn => $res){		 				 		
		 		foreach($res as $sxnSeq => $val){
		 			foreach($val as $type => $itemData){
		 				foreach($itemData as $itemId => $itemSeq){
				 			$obj = new $model();
					 		$obj->template_id 	= $template_id;
					 		$obj->section_id 	= $aSexn;				 		 			 		
					 		$obj->field_id		= $itemId;
					 		$obj->item_seq      = $itemSeq;
					 		$obj->section_seq   = $sxnSeq;
					 		$obj->content_type  = $type;
					 		$obj->save();
		 				}		
		 			}	 			 			 
		 		}   
		 	}			 		    				
		}
	}
		
	public static function resetLayout($template_id){
		$model   	= __CLASS__ ;
		$query      = Doctrine_Query::create()
						->delete("$model m")
						->where("m.template_id = $template_id");		 
		return $query->execute();
	}
}